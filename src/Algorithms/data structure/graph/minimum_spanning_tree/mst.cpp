#include <iostream>
#include <vector>

using namespace std;

/*

前置概念
图 G = (V, E) 子图 G' = (V', E')
子图（subgraph）：满足 V' 是 V 的子集，且 E' 是 E 的子集，则 G' 是 G 的子图

导出子图（induced subgraph）：一个图的导出子图指的是，该图点集 V' 为 V 的子集，
该图的边集 E' 为 E 中两个顶点都属于点集 V' 的边的集合。适用于无向图，有向图。

生成子图：H 是 G 的子图，并且 V' = V，则称 H 为 G 的生成子图/支撑子图(spanning subgraph)
生成树：无向图 G 的生成树是具有 G 全部顶点，但边数最少的连通子图。

一个图的生成树可能有多个。

带权图的生成树中，总权重最小的称为最小生成树。最小生成树（Minimum spanning tree, MST）是最小权重生成树的简称，是一个
连通加权无向图中一颗权值最小的生成树

注意：只有连通图才有生成树，而对于非连通图，只存在生成森林。


最小生成树相关性质
1）最小生成树在一些情况下可能会有多个。当图的每一条边的权值都相同时，
该图的所有生成树都是最小生成树。
2）唯一性，如果图的每一条边的权值都互不相同，那么最小生成树将只有一个


常见问题：
1）以有线电视电缆的架设为例，若只能沿着街道布线，则以街道为边，而路口为顶点，
其中必然有一最小生成树能使布线成本最低。



*/

int main()
{
    return 0;
}